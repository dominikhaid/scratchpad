@type: 'module';
@element: 'dimmer';
@import (multiple) '../../theme.config';

.dimmable:not(body) {
  position: @dimmablePosition;
}

.ui.dimmer {
  display: none;
  position: @dimmerPosition;
  top: 0 !important;
  left: 0 !important;

  width: 100%;
  height: 100%;

  text-align: @textAlign;
  vertical-align: @verticalAlign;
  padding: @padding;

  background-color: @backgroundColor;
  opacity: @hiddenOpacity;
  line-height: @lineHeight;

  animation-fill-mode: both;
  animation-duration: @duration;
  transition: @transition;

  flex-direction: column;
  align-items: center;
  justify-content: center;

  user-select: none;
  will-change: opacity;
  z-index: @zIndex;
}

.ui.dimmer > .content {
  user-select: text;
  color: @textColor;
}

.ui.segment > .ui.dimmer {
  border-radius: inherit !important;
}

.addScrollbars() when (@useCustomScrollbars) {
  .ui.dimmer:not(.inverted)::-webkit-scrollbar-track {
    background: @trackInvertedBackground;
  }

  .ui.dimmer:not(.inverted)::-webkit-scrollbar-thumb {
    background: @thumbInvertedBackground;
  }

  .ui.dimmer:not(.inverted)::-webkit-scrollbar-thumb:window-inactive {
    background: @thumbInvertedInactiveBackground;
  }

  .ui.dimmer:not(.inverted)::-webkit-scrollbar-thumb:hover {
    background: @thumbInvertedHoverBackground;
  }
}
.addScrollbars();

.animating.dimmable:not(body),
.dimmed.dimmable:not(body) {
  overflow: @overflow;
}

.dimmed.dimmable > .ui.animating.dimmer,
.dimmed.dimmable > .ui.visible.dimmer,
.ui.active.dimmer {
  display: flex;
  opacity: @visibleOpacity;
}

.ui.disabled.dimmer {
  width: 0 !important;
  height: 0 !important;
}

.dimmed.dimmable > .ui.animating.legacy.dimmer,
.dimmed.dimmable > .ui.visible.legacy.dimmer,
.ui.active.legacy.dimmer {
  display: block;
}

.ui[class*="top aligned"].dimmer {
  justify-content: flex-start;
}

.ui[class*="bottom aligned"].dimmer {
  justify-content: flex-end;
}

.ui.page.dimmer {
  position: @pageDimmerPosition;
  transform-style: @transformStyle;
  perspective: @perspective;
  transform-origin: center center;
}

body.animating.in.dimmable,
body.dimmed.dimmable {
  overflow: hidden;
}

body.dimmable > .dimmer {
  position: fixed;
}

.blurring.dimmable > :not(.dimmer) {
  filter: @blurredStartFilter;
  transition: @blurredTransition;
}

.blurring.dimmed.dimmable > :not(.dimmer) {
  filter: @blurredEndFilter;
}

.blurring.dimmable > .dimmer {
  background-color: @blurredBackgroundColor;
}

.blurring.dimmable > .inverted.dimmer {
  background-color: @blurredInvertedBackgroundColor;
}

.ui.dimmer > .top.aligned.content > * {
  vertical-align: top;
}

.ui.dimmer > .bottom.aligned.content > * {
  vertical-align: bottom;
}

.ui.inverted.dimmer {
  background-color: @invertedBackgroundColor;
}

.ui.inverted.dimmer > .content > * {
  color: @invertedTextColor;
}

.ui.simple.dimmer {
  display: block;
  overflow: hidden;
  opacity: 1;
  width: 0;
  height: 0;
  z-index: -100;
  background-color: @simpleStartBackgroundColor;
}

.dimmed.dimmable > .ui.simple.dimmer {
  overflow: visible;
  opacity: 1;
  width: 100%;
  height: 100%;
  background-color: @simpleEndBackgroundColor;
  z-index: @simpleZIndex;
}

.ui.simple.inverted.dimmer {
  background-color: @simpleInvertedStartBackgroundColor;
}

.dimmed.dimmable > .ui.simple.inverted.dimmer {
  background-color: @simpleInvertedEndBackgroundColor;
}
.loadUIOverrides();